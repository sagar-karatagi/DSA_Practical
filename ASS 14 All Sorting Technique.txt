// All Sorting Technique

#include <iostream>
using namespace std;

class SortingAlgorithms
{
private:
    int *arr;
    int size;

public:

    // Constructor to initialize the array with user-defined size
    SortingAlgorithms(int s)
    {
        size = s;
        arr = new int[size];
    }

    // Function to take input array from the user
    void inputArray()
    {
        cout << "Enter " << size << " elements for the array: " << endl;
        for (int i = 0; i < size; i++)
        {
            cin >> arr[i];
        }
    }

    // Selection sort implementation
    void selectionSort()
    {
        for (int i = 0; i < size - 1; i++)
        {
            int minIndex = i;
            for (int j = i + 1; j < size; j++)
            {
                if (arr[j] < arr[minIndex])
                {
                    minIndex = j;
                }
            }
            if (minIndex != i)
            {
                swap(arr[i], arr[minIndex]);
            }
        }
    }

    // Bubble sort implementation
    void bubbleSort()
    {
        for (int i = 0; i < size - 1; i++)
        {
            for (int j = 0; j < size - i - 1; j++)
            {
                if (arr[j] > arr[j + 1])
                {
                    swap(arr[j], arr[j + 1]);
                }
            }
        }
    }

    // Quick sort implementation
    void quickSort(int left, int right)
    {
        int i = left, j = right;
        int pivot = arr[(left + right) / 2];

        while (i <= j)
        {
            while (arr[i] < pivot)
                i++;
            while (arr[j] > pivot)
                j--;
            if (i <= j)
            {
                swap(arr[i], arr[j]);
                i++;
                j--;
            }
        }
        if (left < j)
            quickSort(left, j);
        if (i < right)
            quickSort(i, right);
    }

    // Insertion sort implementation
    void insertionSort()
    {
        for (int i = 1; i < size; i++)
        {
            int key = arr[i];
            int j = i - 1;

            while (j >= 0 && arr[j] > key)
            {
                arr[j + 1] = arr[j];
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }

    // Display sorted array
    void displayArray()
    {
        cout << "Sorted Array:\n";
        for (int i = 0; i < size; i++)
        {
            cout << "Element " << (i + 1) << ": " << arr[i] << endl;
        }
    }
};

int main()
{
    int size;
    cout << "Enter the size of the array: ";
    cin >> size;

    SortingAlgorithms sort(size);
    sort.inputArray();

    cout << "\nSorting using Selection Sort...\n";
    sort.selectionSort();
    sort.displayArray();

    cout << "\nSorting using Bubble Sort...\n";
    sort.bubbleSort();
    sort.displayArray();

    cout << "\nSorting using Quick Sort...\n";
    sort.quickSort(0, size - 1);
    sort.displayArray();

    cout << "\nSorting using Insertion Sort...\n";
    sort.insertionSort();
    sort.displayArray();

    return 0;
}
