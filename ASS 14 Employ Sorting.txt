// Employ Sorting

#include <iostream>
#include <string>
using namespace std;
class Employee
{
    int empid;
    float salary;
    string employee_name;

public:
    void accept_data()
    {
        cout << "Enter employee name: ";
        cin >> employee_name;
        cout << "Enter employee salary: ";
        cin >> salary;
        cout << "Enter employee id: ";
        cin >> empid;
    }
    int getEmpID()
    {
        return empid;
    }
    float getSalary()
    {
        return salary;
    }
    string getName()
    {
        return employee_name;
    }
};

void quick_sort(Employee p[], int low, int high)
{

    if (low < high)
    {
        float pivot = p[high].getSalary();
        int i = low - 1;
        for (int j = low; j <= high - 1; j++)
        {
            if (p[j].getSalary() > pivot)
            {
                i++;
                swap(p[i], p[j]);
            }
        }
        swap(p[i + 1], p[high]);
        int pi = i + 1;
        quick_sort(p, low, pi - 1);
        quick_sort(p, pi + 1, high);
    }
}

void insertion_sort(Employee p[], int n)
{
    for (int i = 1; i < n; i++)
    {
        Employee key = p[i];
        int j = i - 1;
        while (j >= 0 && p[j].getSalary() < key.getSalary())
        {
            p[j + 1] = p[j];
            j = j - 1;
        }
        p[j + 1] = key;
    }
}

void bubble_sort(Employee p[], int n)
{
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {

            if (p[j].getSalary() > p[j + 1].getSalary())
            {
                swap(p[j], p[j + 1]);
            }
        }
    }
}
int main()
{
    int no_of_employees;
    cout << "Enter number of employees : ";
    cin >> no_of_employees;
    Employee *employees = new Employee[no_of_employees];
    Employee *employees1 = new Employee[no_of_employees];
    Employee *employees2 = new Employee[no_of_employees];
    for (int i = 0; i < no_of_employees; i++)
    {
        cout << "Enter details for employee " << i + 1 << ":\n";
        employees[i].accept_data();
        employees1[i] = employees[i];
        employees2[i] = employees[i];
    }
    int choice;
    do
    {
        cout << "Menu" << endl;
        cout << "Choose sorting method:\n1. Bubble Sort\n2. Quick Sort\n3. Insertion Sort\n0. Exit\n";
        cout << "Enter your choice : ";
        cin >> choice;
        switch (choice)
        {
        case 1:
            bubble_sort(employees, no_of_employees);
            break;

        case 2:
            quick_sort(employees1, 0, no_of_employees - 1);
            break;
        case 3:
            insertion_sort(employees2, no_of_employees);
            break;
        case 0:
            cout << "Exiting program.";
            break;
        default:
            cout << "Invalid choice. Please try again." << endl;
        }
        if (choice != 0)
        {
            cout << "Top 5 employees with highest salary:\n";
            for (int i = 0; i < min(5, no_of_employees); i++)
            {
                cout << "Employee ID: " << employees[i].getEmpID() << ", Name: "
                     << employees[i].getName() << ", Salary: " << employees[i].getSalary() << endl;
            }
        }
    } while (choice != 0);
    delete[] employees;
    delete[] employees1;
    delete[] employees2;
    return 0;
}
